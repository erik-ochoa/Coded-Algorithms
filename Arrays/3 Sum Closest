class Solution {
    
    // Runtime is O(n^2)
    public int threeSumClosest(int[] nums, int target) {
        
        //sort the array first;
        Arrays.sort(nums);
        
        int closest = nums[0] + nums[1] + nums[2];
        
        //go through each number (and fix it as one of the numers in the sum closest)
        for (int i = 0; i < nums.length - 2; i++) {
            int left = i + 1;
            int right = nums.length-1;
            
            //Use pointer left to move in, and use pointer right to move in,
            while(left < right) {
                int curr = nums[i] + nums[left] + nums[right];
                
                //if the sum of i + left + right is the raget, return it. 
                if (curr == target) {
                    closest = nums[i] + nums[left] + nums[right];                    
                    return closest;
                }
                
                // if the curr sum is better, assign it to closest
                if (Math.abs(target - curr) < Math.abs(target - closest)) {
                    closest = nums[i] + nums[left] + nums[right];
                }
                
                // if the current sum is less than the target, move the left pointer
                if (curr <= target) {
                    left++;
                } 
                //if the current sum is greater than the target, move the right pointer
                else {
                    right--;
                }    
            }
        }
        
        return closest;
    }
}
