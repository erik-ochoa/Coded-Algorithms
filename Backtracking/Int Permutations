class Solution {
    //Setting things up
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList();
        
        ArrayList<Integer> choices = new ArrayList();
        for (int i : nums) choices.add(i);
        
        helper(choices, new ArrayList<Integer>(), res);
        return res;
    }
    
    public void helper(ArrayList<Integer> choices, ArrayList<Integer> chosen, List<List<Integer>> permutations) {
        //base case
        if (choices.size() == 0) {
            permutations.add(new ArrayList(chosen));
            return;
        }
        
        for (int i = 0; i < choices.size(); i++) {
            // choose
            int curr = (Integer)choices.get(i);
            chosen.add(curr);
            choices.remove(i);
            // explore
            helper(choices, chosen, permutations);
            // unchoose
            chosen.remove(chosen.size() - 1);
            choices.add(i, curr);
        }
    }
}
